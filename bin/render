#!/usr/bin/env node

import fs from 'fs';
import path from 'path';
import JSHaml from '../src/haml.js';
import prettifyHtml from '../src/prettify.js';

// Check command line arguments
if (process.argv.length < 3) {
  console.error('Usage: render <template-path> [json-data]');
  process.exit(1);
}

const templatePath = process.argv[2];
const jsonData = process.argv[3];

// Read template file
let template;
try {
  template = fs.readFileSync(templatePath, 'utf8');
} catch (err) {
  console.error(`Error reading template file: ${err.message}`);
  process.exit(1);
}

// Create JSHaml instance
const jsHaml = new JSHaml();

if (!jsonData) {
  // No JSON data provided - generate and return the minimal function
  const minimalFunction = jsHaml.generateMinimalFunction(template);
  console.log(minimalFunction);
} else {
  // JSON data provided - parse it and render the template
  let data;
  try {
    data = JSON.parse(jsonData);
  } catch (err) {
    console.error(`Error parsing JSON data: ${err.message}`);
    process.exit(1);
  }

  // Compile and render template with data
  const renderFunction = jsHaml.compile(template);
  const result = renderFunction(data);

  // Pretty print the HTML
  const prettyHtml = prettifyHtml(result);
  console.log(prettyHtml);
}

